nextflow_pipeline {

    name "Test Workflow main.nf"
    script "main.nf"
    tag "test_novaseq"
    tag "pipeline"

    test("Paired-End Novaseq") {

        when {
            params {
                outdir = "$outputDir"
            }
        }

        then {
            assertAll(
                { assert workflow.success },
                { assert new File("$outputDir/pipeline_info/software_versions.yml").exists() },
                { assert snapshot(path("$outputDir/dada2/ASV_seqs.fasta"),
                                path("$outputDir/dada2/ASV_table.tsv"),
                                path("$outputDir/dada2/DADA2_stats.tsv"),
                                path("$outputDir/dada2/DADA2_table.rds"),
                                path("$outputDir/dada2/DADA2_table.tsv")).match("dada2") },
                { assert new File("$outputDir/fastqc/S1_1_fastqc.html").exists() },
                { assert new File("$outputDir/fastqc/S1_2_fastqc.html").exists() },
                { assert new File("$outputDir/fastqc/S2_1_fastqc.html").exists() },
                { assert new File("$outputDir/fastqc/S2_2_fastqc.html").exists() },
                { assert snapshot(path("$outputDir/input/Samplesheet_novaseq.tsv")).match("input") },
                { assert snapshot(path("$outputDir/multiqc/multiqc_data/multiqc_fastqc.txt"),
                                path("$outputDir/multiqc/multiqc_data/multiqc_general_stats.txt")).match("multiqc") },
                { assert new File("$outputDir/summary_report/summary_report.html").exists() }
            )
        }
    }
}
